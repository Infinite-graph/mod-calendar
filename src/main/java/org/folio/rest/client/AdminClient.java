
package org.folio.rest.client;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import javax.mail.BodyPart;
import javax.mail.MessagingException;
import javax.mail.internet.MimeMultipart;
import io.vertx.core.Handler;
import io.vertx.core.buffer.Buffer;
import io.vertx.core.http.HttpClient;
import io.vertx.core.http.HttpClientOptions;
import io.vertx.core.http.HttpClientResponse;
import org.folio.rest.tools.utils.VertxUtils;


/**
 * Auto-generated code - based on class org.folio.rest.jaxrs.resource.AdminResource
 * 
 */
public class AdminClient {

    private final static String GLOBAL_PATH = "/admin";
    private String tenantId;
    private String token;
    private HttpClientOptions options;
    private HttpClient httpClient;

    public AdminClient(String host, int port, String tenantId, String token, boolean keepAlive, int connTO, int idleTO) {
        // Auto-generated code
        // - generated by       org.folio.rest.tools.ClientGenerator
        // - generated based on org.folio.rest.jaxrs.resource.AdminResource
        this.tenantId = tenantId;
        this.token = token;
        options = new HttpClientOptions();
        options.setLogActivity(true);
        options.setKeepAlive(keepAlive);
        options.setDefaultHost(host);
        options.setDefaultPort(port);
        options.setConnectTimeout(connTO);
        options.setIdleTimeout(idleTO);
        httpClient = VertxUtils.getVertxFromContextOrNew().createHttpClient(options);
    }

    public AdminClient(String host, int port, String tenantId, String token) {
        // Auto-generated code
        // - generated by       org.folio.rest.tools.ClientGenerator
        // - generated based on org.folio.rest.jaxrs.resource.AdminResource
        this(host, port, tenantId, token, true, 2000, 5000);
    }

    public AdminClient(String host, int port, String tenantId, String token, boolean keepAlive) {
        // Auto-generated code
        // - generated by       org.folio.rest.tools.ClientGenerator
        // - generated based on org.folio.rest.jaxrs.resource.AdminResource
        this(host, port, tenantId, token, keepAlive, 2000, 5000);
    }

    /**
     * Convenience constructor for tests ONLY!<br>Connect to localhost on 8081 as folio_demo tenant.
     * 
     */
    public AdminClient() {
        // Auto-generated code
        // - generated by       org.folio.rest.tools.ClientGenerator
        // - generated based on org.folio.rest.jaxrs.resource.AdminResource
        this("localhost", 8081, "folio_demo", "folio_demo", false, 2000, 5000);
    }

    /**
     * Service endpoint "/admin/table_index_usage"+queryParams.toString()
     * 
     */
    public void getTableIndexUsage(Handler<HttpClientResponse> responseHandler) {
        // Auto-generated code
        // - generated by       org.folio.rest.tools.ClientGenerator
        // - generated based on org.folio.rest.jaxrs.resource.AdminResource
        StringBuilder queryParams = new StringBuilder("?");
        io.vertx.core.http.HttpClientRequest request = httpClient.get("/admin/table_index_usage"+queryParams.toString());
        request.handler(responseHandler);
        request.putHeader("Accept", "application/json,text/plain");
        if (tenantId!= null) {
            request.putHeader("X-Okapi-Token", token);
            request.putHeader("x-okapi-tenant", tenantId);
        }
        request.end();
    }

    /**
     * Service endpoint "/admin/cache_hit_rates"+queryParams.toString()
     * 
     */
    public void getCacheHitRates(Handler<HttpClientResponse> responseHandler) {
        // Auto-generated code
        // - generated by       org.folio.rest.tools.ClientGenerator
        // - generated based on org.folio.rest.jaxrs.resource.AdminResource
        StringBuilder queryParams = new StringBuilder("?");
        io.vertx.core.http.HttpClientRequest request = httpClient.get("/admin/cache_hit_rates"+queryParams.toString());
        request.handler(responseHandler);
        request.putHeader("Accept", "application/json,text/plain");
        if (tenantId!= null) {
            request.putHeader("X-Okapi-Token", token);
            request.putHeader("x-okapi-tenant", tenantId);
        }
        request.end();
    }

    /**
     * Service endpoint "/admin/postgres_table_size"+queryParams.toString()
     * 
     */
    public void getPostgresTableSize(String dbname, Handler<HttpClientResponse> responseHandler)
        throws UnsupportedEncodingException
    {
        // Auto-generated code
        // - generated by       org.folio.rest.tools.ClientGenerator
        // - generated based on org.folio.rest.jaxrs.resource.AdminResource
        StringBuilder queryParams = new StringBuilder("?");
        if (dbname!= null) {
            queryParams.append("dbname=");
            queryParams.append(URLEncoder.encode(dbname, "UTF-8"));
            queryParams.append("&");
        }
        io.vertx.core.http.HttpClientRequest request = httpClient.get("/admin/postgres_table_size"+queryParams.toString());
        request.handler(responseHandler);
        request.putHeader("Accept", "application/json,text/plain");
        if (tenantId!= null) {
            request.putHeader("X-Okapi-Token", token);
            request.putHeader("x-okapi-tenant", tenantId);
        }
        request.end();
    }

    /**
     * Service endpoint "/admin/slow_queries"+queryParams.toString()
     * 
     */
    public void getSlowQueries(int querytimerunning, Handler<HttpClientResponse> responseHandler) {
        // Auto-generated code
        // - generated by       org.folio.rest.tools.ClientGenerator
        // - generated based on org.folio.rest.jaxrs.resource.AdminResource
        StringBuilder queryParams = new StringBuilder("?");
        queryParams.append("querytimerunning=");
        queryParams.append(querytimerunning);
        queryParams.append("&");
        io.vertx.core.http.HttpClientRequest request = httpClient.get("/admin/slow_queries"+queryParams.toString());
        request.handler(responseHandler);
        request.putHeader("Accept", "application/json,text/plain");
        if (tenantId!= null) {
            request.putHeader("X-Okapi-Token", token);
            request.putHeader("x-okapi-tenant", tenantId);
        }
        request.end();
    }

    /**
     * Service endpoint "/admin/total_db_size"+queryParams.toString()
     * 
     */
    public void getTotalDbSize(String dbname, Handler<HttpClientResponse> responseHandler)
        throws UnsupportedEncodingException
    {
        // Auto-generated code
        // - generated by       org.folio.rest.tools.ClientGenerator
        // - generated based on org.folio.rest.jaxrs.resource.AdminResource
        StringBuilder queryParams = new StringBuilder("?");
        if (dbname!= null) {
            queryParams.append("dbname=");
            queryParams.append(URLEncoder.encode(dbname, "UTF-8"));
            queryParams.append("&");
        }
        io.vertx.core.http.HttpClientRequest request = httpClient.get("/admin/total_db_size"+queryParams.toString());
        request.handler(responseHandler);
        request.putHeader("Accept", "application/json,text/plain");
        if (tenantId!= null) {
            request.putHeader("X-Okapi-Token", token);
            request.putHeader("x-okapi-tenant", tenantId);
        }
        request.end();
    }

    /**
     * Service endpoint "/admin/db_cache_summary"+queryParams.toString()
     * 
     */
    public void getDbCacheSummary(Handler<HttpClientResponse> responseHandler) {
        // Auto-generated code
        // - generated by       org.folio.rest.tools.ClientGenerator
        // - generated based on org.folio.rest.jaxrs.resource.AdminResource
        StringBuilder queryParams = new StringBuilder("?");
        io.vertx.core.http.HttpClientRequest request = httpClient.get("/admin/db_cache_summary"+queryParams.toString());
        request.handler(responseHandler);
        request.putHeader("Accept", "application/json,text/plain");
        if (tenantId!= null) {
            request.putHeader("X-Okapi-Token", token);
            request.putHeader("x-okapi-tenant", tenantId);
        }
        request.end();
    }

    /**
     * Service endpoint "/admin/list_locking_queries"+queryParams.toString()
     * 
     */
    public void getListLockingQueries(String dbname, Handler<HttpClientResponse> responseHandler)
        throws UnsupportedEncodingException
    {
        // Auto-generated code
        // - generated by       org.folio.rest.tools.ClientGenerator
        // - generated based on org.folio.rest.jaxrs.resource.AdminResource
        StringBuilder queryParams = new StringBuilder("?");
        if (dbname!= null) {
            queryParams.append("dbname=");
            queryParams.append(URLEncoder.encode(dbname, "UTF-8"));
            queryParams.append("&");
        }
        io.vertx.core.http.HttpClientRequest request = httpClient.get("/admin/list_locking_queries"+queryParams.toString());
        request.handler(responseHandler);
        request.putHeader("Accept", "application/json,text/plain");
        if (tenantId!= null) {
            request.putHeader("X-Okapi-Token", token);
            request.putHeader("x-okapi-tenant", tenantId);
        }
        request.end();
    }

    /**
     * Service endpoint "/admin/kill_query"+queryParams.toString()
     * 
     */
    public void deleteKillQuery(String pid, Handler<HttpClientResponse> responseHandler)
        throws UnsupportedEncodingException
    {
        // Auto-generated code
        // - generated by       org.folio.rest.tools.ClientGenerator
        // - generated based on org.folio.rest.jaxrs.resource.AdminResource
        StringBuilder queryParams = new StringBuilder("?");
        if (pid!= null) {
            queryParams.append("pid=");
            queryParams.append(URLEncoder.encode(pid, "UTF-8"));
            queryParams.append("&");
        }
        io.vertx.core.http.HttpClientRequest request = httpClient.delete("/admin/kill_query"+queryParams.toString());
        request.handler(responseHandler);
        request.putHeader("Accept", "text/plain");
        if (tenantId!= null) {
            request.putHeader("X-Okapi-Token", token);
            request.putHeader("x-okapi-tenant", tenantId);
        }
        request.end();
    }

    /**
     * Service endpoint "/admin/postgres_table_access_stats"+queryParams.toString()
     * 
     */
    public void getPostgresTableAccessStats(Handler<HttpClientResponse> responseHandler) {
        // Auto-generated code
        // - generated by       org.folio.rest.tools.ClientGenerator
        // - generated based on org.folio.rest.jaxrs.resource.AdminResource
        StringBuilder queryParams = new StringBuilder("?");
        io.vertx.core.http.HttpClientRequest request = httpClient.get("/admin/postgres_table_access_stats"+queryParams.toString());
        request.handler(responseHandler);
        request.putHeader("Accept", "application/json,text/plain");
        if (tenantId!= null) {
            request.putHeader("X-Okapi-Token", token);
            request.putHeader("x-okapi-tenant", tenantId);
        }
        request.end();
    }

    /**
     * Service endpoint "/admin/postgres_load"+queryParams.toString()
     * 
     */
    public void getPostgresLoad(String dbname, Handler<HttpClientResponse> responseHandler)
        throws UnsupportedEncodingException
    {
        // Auto-generated code
        // - generated by       org.folio.rest.tools.ClientGenerator
        // - generated based on org.folio.rest.jaxrs.resource.AdminResource
        StringBuilder queryParams = new StringBuilder("?");
        if (dbname!= null) {
            queryParams.append("dbname=");
            queryParams.append(URLEncoder.encode(dbname, "UTF-8"));
            queryParams.append("&");
        }
        io.vertx.core.http.HttpClientRequest request = httpClient.get("/admin/postgres_load"+queryParams.toString());
        request.handler(responseHandler);
        request.putHeader("Accept", "application/json,text/plain");
        if (tenantId!= null) {
            request.putHeader("X-Okapi-Token", token);
            request.putHeader("x-okapi-tenant", tenantId);
        }
        request.end();
    }

    /**
     * Service endpoint "/admin/importSQL"+queryParams.toString()
     * 
     */
    public void postImportSQL(InputStream inputStream, Handler<HttpClientResponse> responseHandler)
        throws IOException
    {
        // Auto-generated code
        // - generated by       org.folio.rest.tools.ClientGenerator
        // - generated based on org.folio.rest.jaxrs.resource.AdminResource
        StringBuilder queryParams = new StringBuilder("?");
        Buffer buffer = Buffer.buffer();
        ByteArrayOutputStream result = new ByteArrayOutputStream();
        byte[] buffer1 = new byte[ 1024 ] ;
        int length;
        while (true) {
            length = inputStream.read(buffer1);
            if (length == -1) {
                break;
            }
            result.write(buffer1, 0, length);
        }
        buffer.appendBytes(result.toByteArray());
        io.vertx.core.http.HttpClientRequest request = httpClient.post("/admin/importSQL"+queryParams.toString());
        request.handler(responseHandler);
        request.putHeader("Content-type", "application/octet-stream");
        request.putHeader("Accept", "text/plain");
        if (tenantId!= null) {
            request.putHeader("X-Okapi-Token", token);
            request.putHeader("x-okapi-tenant", tenantId);
        }
        request.putHeader("Content-Length", buffer.length()+"");
        request.setChunked(true);
        request.write(buffer);
        request.end();
    }

    /**
     * Service endpoint "/admin/uploadmultipart"+queryParams.toString()
     * 
     */
    public void postUploadmultipart(org.folio.rest.jaxrs.resource.AdminResource.PersistMethod persist_method, String bus_address, String file_name, MimeMultipart mimeMultipart, Handler<HttpClientResponse> responseHandler)
        throws IOException, UnsupportedEncodingException, MessagingException
    {
        // Auto-generated code
        // - generated by       org.folio.rest.tools.ClientGenerator
        // - generated based on org.folio.rest.jaxrs.resource.AdminResource
        StringBuilder queryParams = new StringBuilder("?");
        if (persist_method!= null) {
            queryParams.append("persist_method=");
            queryParams.append(persist_method);
            queryParams.append("&");
        }
        if (bus_address!= null) {
            queryParams.append("bus_address=");
            queryParams.append(URLEncoder.encode(bus_address, "UTF-8"));
            queryParams.append("&");
        }
        if (file_name!= null) {
            queryParams.append("file_name=");
            queryParams.append(URLEncoder.encode(file_name, "UTF-8"));
            queryParams.append("&");
        }
        Buffer buffer = Buffer.buffer();
        if (mimeMultipart!= null) {
            int parts = mimeMultipart.getCount();
            StringBuilder sb = new StringBuilder();
            for (int i = 0; (i<parts); i ++) {
                BodyPart bp = mimeMultipart.getBodyPart(i);
                sb.append("----BOUNDARY\r\n");
                sb.append("Content-Disposition: \"");
                sb.append(bp.getDisposition());
                sb.append("\"; name=\"");
                sb.append(bp.getFileName());
                sb.append("\"; filename=\")");
                sb.append(bp.getFileName());
                sb.append("\"\r\n");
                sb.append("Content-Type: application/octet-stream\r\n");
                sb.append("Content-Transfer-Encoding: binary\r\n");
            }
            sb.append("----BOUNDARY\r\n");
            buffer.appendString(sb.toString());
        }
        io.vertx.core.http.HttpClientRequest request = httpClient.post("/admin/uploadmultipart"+queryParams.toString());
        request.handler(responseHandler);
        request.putHeader("Content-type", "multipart/form-data; boundary=--BOUNDARY");
        request.putHeader("Accept", "text/plain");
        if (tenantId!= null) {
            request.putHeader("X-Okapi-Token", token);
            request.putHeader("x-okapi-tenant", tenantId);
        }
        request.putHeader("Content-Length", buffer.length()+"");
        request.setChunked(true);
        request.write(buffer);
        request.end();
    }

    /**
     * Service endpoint "/admin/postgres_active_sessions"+queryParams.toString()
     * 
     */
    public void getPostgresActiveSessions(String dbname, Handler<HttpClientResponse> responseHandler)
        throws UnsupportedEncodingException
    {
        // Auto-generated code
        // - generated by       org.folio.rest.tools.ClientGenerator
        // - generated based on org.folio.rest.jaxrs.resource.AdminResource
        StringBuilder queryParams = new StringBuilder("?");
        if (dbname!= null) {
            queryParams.append("dbname=");
            queryParams.append(URLEncoder.encode(dbname, "UTF-8"));
            queryParams.append("&");
        }
        io.vertx.core.http.HttpClientRequest request = httpClient.get("/admin/postgres_active_sessions"+queryParams.toString());
        request.handler(responseHandler);
        request.putHeader("Accept", "application/json,text/plain");
        if (tenantId!= null) {
            request.putHeader("X-Okapi-Token", token);
            request.putHeader("x-okapi-tenant", tenantId);
        }
        request.end();
    }

    /**
     * Service endpoint "/admin/health"+queryParams.toString()
     * 
     */
    public void getHealth(Handler<HttpClientResponse> responseHandler) {
        // Auto-generated code
        // - generated by       org.folio.rest.tools.ClientGenerator
        // - generated based on org.folio.rest.jaxrs.resource.AdminResource
        StringBuilder queryParams = new StringBuilder("?");
        io.vertx.core.http.HttpClientRequest request = httpClient.get("/admin/health"+queryParams.toString());
        request.handler(responseHandler);
        request.putHeader("Accept", ",text/plain");
        if (tenantId!= null) {
            request.putHeader("X-Okapi-Token", token);
            request.putHeader("x-okapi-tenant", tenantId);
        }
        request.end();
    }

    /**
     * Service endpoint "/admin/loglevel"+queryParams.toString()
     * 
     */
    public void putLoglevel(org.folio.rest.jaxrs.resource.AdminResource.Level level, String java_package, Handler<HttpClientResponse> responseHandler)
        throws UnsupportedEncodingException
    {
        // Auto-generated code
        // - generated by       org.folio.rest.tools.ClientGenerator
        // - generated based on org.folio.rest.jaxrs.resource.AdminResource
        StringBuilder queryParams = new StringBuilder("?");
        if (level!= null) {
            queryParams.append("level=");
            queryParams.append(level);
            queryParams.append("&");
        }
        if (java_package!= null) {
            queryParams.append("java_package=");
            queryParams.append(URLEncoder.encode(java_package, "UTF-8"));
            queryParams.append("&");
        }
        io.vertx.core.http.HttpClientRequest request = httpClient.put("/admin/loglevel"+queryParams.toString());
        request.handler(responseHandler);
        request.putHeader("Accept", "application/json,text/plain");
        if (tenantId!= null) {
            request.putHeader("X-Okapi-Token", token);
            request.putHeader("x-okapi-tenant", tenantId);
        }
        request.end();
    }

    /**
     * Service endpoint "/admin/memory"+queryParams.toString()
     * 
     */
    public void getMemory(boolean history, Handler<HttpClientResponse> responseHandler) {
        // Auto-generated code
        // - generated by       org.folio.rest.tools.ClientGenerator
        // - generated based on org.folio.rest.jaxrs.resource.AdminResource
        StringBuilder queryParams = new StringBuilder("?");
        queryParams.append("history=");
        queryParams.append(history);
        queryParams.append("&");
        io.vertx.core.http.HttpClientRequest request = httpClient.get("/admin/memory"+queryParams.toString());
        request.handler(responseHandler);
        request.putHeader("Accept", "text/html,text/plain");
        if (tenantId!= null) {
            request.putHeader("X-Okapi-Token", token);
            request.putHeader("x-okapi-tenant", tenantId);
        }
        request.end();
    }

    /**
     * Service endpoint "/admin/loglevel"+queryParams.toString()
     * 
     */
    public void getLoglevel(Handler<HttpClientResponse> responseHandler) {
        // Auto-generated code
        // - generated by       org.folio.rest.tools.ClientGenerator
        // - generated based on org.folio.rest.jaxrs.resource.AdminResource
        StringBuilder queryParams = new StringBuilder("?");
        io.vertx.core.http.HttpClientRequest request = httpClient.get("/admin/loglevel"+queryParams.toString());
        request.handler(responseHandler);
        request.putHeader("Accept", "application/json,text/plain");
        if (tenantId!= null) {
            request.putHeader("X-Okapi-Token", token);
            request.putHeader("x-okapi-tenant", tenantId);
        }
        request.end();
    }

    /**
     * Service endpoint "/admin/jstack"+queryParams.toString()
     * 
     */
    public void putJstack(Handler<HttpClientResponse> responseHandler) {
        // Auto-generated code
        // - generated by       org.folio.rest.tools.ClientGenerator
        // - generated based on org.folio.rest.jaxrs.resource.AdminResource
        StringBuilder queryParams = new StringBuilder("?");
        io.vertx.core.http.HttpClientRequest request = httpClient.put("/admin/jstack"+queryParams.toString());
        request.handler(responseHandler);
        request.putHeader("Accept", "text/plain");
        if (tenantId!= null) {
            request.putHeader("X-Okapi-Token", token);
            request.putHeader("x-okapi-tenant", tenantId);
        }
        request.end();
    }

    /**
     * Service endpoint "/admin/jstack"+queryParams.toString()
     * 
     */
    public void getJstack(Handler<HttpClientResponse> responseHandler) {
        // Auto-generated code
        // - generated by       org.folio.rest.tools.ClientGenerator
        // - generated based on org.folio.rest.jaxrs.resource.AdminResource
        StringBuilder queryParams = new StringBuilder("?");
        io.vertx.core.http.HttpClientRequest request = httpClient.get("/admin/jstack"+queryParams.toString());
        request.handler(responseHandler);
        request.putHeader("Accept", "text/html,text/plain");
        if (tenantId!= null) {
            request.putHeader("X-Okapi-Token", token);
            request.putHeader("x-okapi-tenant", tenantId);
        }
        request.end();
    }

    /**
     * Service endpoint "/admin/set_AES_key"+queryParams.toString()
     * 
     */
    public void postSetAESKey(String key, Handler<HttpClientResponse> responseHandler)
        throws UnsupportedEncodingException
    {
        // Auto-generated code
        // - generated by       org.folio.rest.tools.ClientGenerator
        // - generated based on org.folio.rest.jaxrs.resource.AdminResource
        StringBuilder queryParams = new StringBuilder("?");
        if (key!= null) {
            queryParams.append("key=");
            queryParams.append(URLEncoder.encode(key, "UTF-8"));
            queryParams.append("&");
        }
        io.vertx.core.http.HttpClientRequest request = httpClient.post("/admin/set_AES_key"+queryParams.toString());
        request.handler(responseHandler);
        if (tenantId!= null) {
            request.putHeader("X-Okapi-Token", token);
            request.putHeader("x-okapi-tenant", tenantId);
        }
        request.end();
    }

    /**
     * Service endpoint "/admin/get_password"+queryParams.toString()
     * 
     */
    public void postGetPassword(String key, Handler<HttpClientResponse> responseHandler)
        throws UnsupportedEncodingException
    {
        // Auto-generated code
        // - generated by       org.folio.rest.tools.ClientGenerator
        // - generated based on org.folio.rest.jaxrs.resource.AdminResource
        StringBuilder queryParams = new StringBuilder("?");
        if (key!= null) {
            queryParams.append("key=");
            queryParams.append(URLEncoder.encode(key, "UTF-8"));
            queryParams.append("&");
        }
        io.vertx.core.http.HttpClientRequest request = httpClient.post("/admin/get_password"+queryParams.toString());
        request.handler(responseHandler);
        request.putHeader("Accept", "text/plain");
        if (tenantId!= null) {
            request.putHeader("X-Okapi-Token", token);
            request.putHeader("x-okapi-tenant", tenantId);
        }
        request.end();
    }

    /**
     * Service endpoint "/admin/module_stats"+queryParams.toString()
     * 
     */
    public void getModuleStats(Handler<HttpClientResponse> responseHandler) {
        // Auto-generated code
        // - generated by       org.folio.rest.tools.ClientGenerator
        // - generated based on org.folio.rest.jaxrs.resource.AdminResource
        StringBuilder queryParams = new StringBuilder("?");
        io.vertx.core.http.HttpClientRequest request = httpClient.get("/admin/module_stats"+queryParams.toString());
        request.handler(responseHandler);
        request.putHeader("Accept", "text/plain");
        if (tenantId!= null) {
            request.putHeader("X-Okapi-Token", token);
            request.putHeader("x-okapi-tenant", tenantId);
        }
        request.end();
    }

}
